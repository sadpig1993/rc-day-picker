{"version":3,"sources":["../src/Utils.js"],"names":[],"mappings":"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","file":"Utils.js","sourcesContent":["/**\n* @file 组件工具函数\n* @author xijiawei@baidu.com\n*/\n\n\n// 星期文案\nconst WEEKDAYS = ['日', '一', '二', '三', '四', '五', '六'];\n\n// 月份文案\nconst MONTHS = ['一月', '二月', '三月', '四月', '五月', '六月',\n    '七月', '八月', '九月', '十月', '十一月', '十二月'];\n\n/**\n * 生成年月文案\n *\n * @param  {Date} \n * @return {string} 返回对应文案\n */\nexport function formatMonthTitle(d) {\n  return `${d.getFullYear()}年 ${MONTHS[d.getMonth()]}`;\n}\n\n/**\n * 获取星期文案\n *\n * @param  {number} i 星期几\n * @return {string} 返回对应文案\n */\nexport function formatWeekday(i){\n    return WEEKDAYS[i];\n}\n\n/**\n * 获取星期文案\n *\n * @return {Array} 返回全部月份文案\n */\nexport function getMonths() {\n    return MONTHS;\n}\n\n\n/**\n * 拷贝一个Date对象\n *\n * @param  {Date} day 要拷贝的Date对象\n * @return {Date} 返回的Date对象\n */\nexport function clone(day) {\n    return new Date(day.getTime());\n}\n\n\n/**\n * 增加\\减少某个Date对象的月份\n *\n * @param  {Date} day 要修改的Date对象\n * @param  {number} n 要增加\\减少的月数\n * @return {Date} 返回的Date对象\n */\nexport function addMonths(day, n) {\n    const newDate = clone(day);\n    newDate.setMonth(day.getMonth() + n);\n    return newDate;\n}\n\n/**\n * 判断两个日期是否是同一天\n *\n * @param  {Date}  d1\n * @param  {Date}  d2\n * @return {Boolean}\n */\nexport function isSameDay(d1, d2) {\n    if (!d1 || !d2) {\n        return false;\n    }\n    return d1.getDate() === d2.getDate() &&\n        d1.getMonth() === d2.getMonth() &&\n        d1.getFullYear() === d2.getFullYear();\n}\n\n/**\n * 判断一个日期是否在一个范围内（包含边界）\n *\n * @param  {Date}  day\n * @param  {Object}  range\n * @return {Boolean}\n */\nexport function isDayInRange(day, range) {\n    const { from, to } = range;\n    return (from && isSameDay(day, from)) ||\n        (to && isSameDay(day, to)) ||\n        (from && to && isDayBetween(day, from, to));\n}\n\n/**\n * 判断一个日期是否在另外两个日期之间\n * 不包含边界\n *\n * @param  {Date}  d\n * @param  {Date}  d1\n * @param  {Date}  d2\n * @return {Boolean}\n */\nexport function isDayBetween(d, d1, d2) {\n    const date = clone(d);\n    const date1 = clone(d1);\n    const date2 = clone(d2);\n\n    date.setHours(0, 0, 0, 0);\n    date1.setHours(0, 0, 0, 0);\n    date2.setHours(0, 0, 0, 0);\n    return (date1 < date && date < date2) \n        || (date2 < date && date < date1);\n}\n\n/**\n * 获取一个日期所在的月份的第一天\n *\n * @param  {Date}  day\n * @return {Boolean}\n */\nexport function getFirstDayOfMonth(day) {\n    return new Date(day.getFullYear(), day.getMonth(), 1, 12);\n}\n\n/**\n * 获取一个日期所在的月份的总天数\n *\n * @param  {Date}  day\n * @return {Boolean}\n */\nexport function getDayNumOfMonth(day) {\n    const resultDate = getFirstDayOfMonth(day);\n\n    resultDate.setMonth(resultDate.getMonth() + 1);\n    resultDate.setDate(resultDate.getDate() - 1);\n\n    return resultDate.getDate();\n}\n\n/**\n * 把给定月份按星期的生成\n *\n * @param  {Date}  day\n * @param  {Number=} firstDayOfWeek \n * @return {Array}\n */\nexport function getWeekArray(day, firstDayOfWeek = 0) {\n    const dayNumOfMonth = getDayNumOfMonth(day);\n    const dayArray = [];\n\n    // 生成整个月的每一天的Date对象\n    for (let i = 1 ; i <= dayNumOfMonth; i++) {\n        dayArray.push(new Date(day.getFullYear(), day.getMonth(), i, 12))\n    }\n\n    // 一个星期的缓存数组\n    let week = [];\n    // 整个月份的星期数组\n    const weekArray = [];\n\n    // 遍历dayArray 分配到每个week数组里\n    dayArray.forEach((day) => {\n        if (week.length > 0 && day.getDay() === firstDayOfWeek) {\n            weekArray.push(week);\n            week = [];\n        }\n        week.push(day);\n        if (dayArray.indexOf(day) === dayArray.length - 1) {\n            weekArray.push(week);\n        }\n    });\n\n\n    const firstWeek = weekArray[0];\n    const startIndex = 7 - firstWeek.length;\n    // 补全第一周的缺的上月日期\n    for (let i = startIndex; i > 0; i--) {\n        const outsideDate = clone(firstWeek[0]);\n        outsideDate.setDate(firstWeek[0].getDate() - 1);\n        firstWeek.unshift(outsideDate);\n    }\n    const lastWeek = weekArray[weekArray.length - 1];\n    // 补全最后一周缺的下月的日期\n    for (let i = lastWeek.length; i < 7; i++) {\n        const outsideDate = clone(lastWeek[lastWeek.length - 1]);\n        outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);\n        lastWeek.push(outsideDate);\n    }\n\n    return weekArray;\n}\n\n\n/**\n * 自定义修饰器函数判断\n *\n * @param  {Date}  day\n * @param  {Object} modifierFunctions \n * @return {Array}\n */\nexport function getModifiersForDay(d, modifierFunctions = {}) {\n    return Object.keys(modifierFunctions).reduce((modifiers, modifier) => {\n        const func = modifierFunctions[modifier];\n        if (func(d)) {\n            modifiers.push(modifier);\n        }\n\n        return modifiers;\n    }, []);\n}\n\nexport default {\n    formatMonthTitle,\n    formatWeekday,\n    getMonths,\n    getWeekArray,\n    addMonths,\n    isSameDay,\n    isDayInRange,\n    getModifiersForDay\n};\n"]}