{"version":3,"sources":["../src/Utils.js"],"names":[],"mappings":"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","file":"Utils.js","sourcesContent":["const WEEKDAYS = ['日', '一', '二',\n  '三', '四', '五', '六'];\n\nconst WEEKDAYS_EN = ['Sunday', 'Monday', 'Tuesday',\n  'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nconst WEEKDAYS_EN_SHORT = ['Su', 'Mo', 'Tu',\n  'We', 'Th', 'Fr', 'Sa'];\n\nconst MONTHS = ['一月', '二月', '三月', '四月', '五月', '六月',\n  '七月', '八月', '九月', '十月', '十一月', '十二月'];\n\nconst MONTHS_EN = ['January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'];\n\n\nexport function formatMonthTitle(d) {\n  return `${d.getFullYear()}年 ${MONTHS[d.getMonth()]}`;\n}\n\nexport function formatWeekday(i){\n  return WEEKDAYS[i];\n}\n\nexport function formatWeekdayShort(i) {\n  return WEEKDAYS_EN_SHORT[i];\n}\n\nexport function formatWeekdayLong(i) {\n  return WEEKDAYS_EN[i];\n}\n\nexport function getFirstDayOfWeek() {\n  return 0;\n}\n\nexport function getMonths() {\n  return MONTHS;\n}\n\nexport function addMonths(day, n) {\n  const newDate = clone(day);\n  newDate.setMonth(day.getMonth() + n);\n  return newDate;\n}\n\n/**\n * Return `true` if two dates are the same day, ignoring the time.\n *\n * @param  {Date}  d1\n * @param  {Date}  d2\n * @return {Boolean}\n */\nexport function isSameDay(d1, d2) {\n  if (!d1 || !d2) {\n    return false;\n  }\n  return d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear();\n}\n\n/**\n * Return `true` if a day is included in a range of days.\n *\n * @param  {Date}  day\n * @param  {Object}  range\n * @return {Boolean}\n */\nexport function isDayInRange(day, range) {\n  const { from, to } = range;\n  return (from && isSameDay(day, from)) ||\n    (to && isSameDay(day, to)) ||\n    (from && to && isDayBetween(day, from, to));\n}\n\n/**\n * Return `true` if day `d` is between days `d1` and `d2`,\n * without including them.\n *\n * @param  {Date}  d\n * @param  {Date}  d1\n * @param  {Date}  d2\n * @return {Boolean}\n */\nexport function isDayBetween(d, d1, d2) {\n  const date = clone(d);\n  const date1 = clone(d1);\n  const date2 = clone(d2);\n\n  date.setHours(0, 0, 0, 0);\n  date1.setHours(0, 0, 0, 0);\n  date2.setHours(0, 0, 0, 0);\n  return (date1 < date && date < date2) || (date2 < date && date < date1);\n}\n\nexport function getModifiersForDay(d, modifierFunctions = {}) {\n  return Object.keys(modifierFunctions).reduce((modifiers, modifier) => {\n    const func = modifierFunctions[modifier];\n    if (func(d)) {\n      modifiers.push(modifier);\n    }\n\n    return modifiers;\n  }, []);\n}\n\nexport function getWeekArray(day, firstDayOfWeek = getFirstDayOfWeek()) {\n  const dayNumOfMonth = getDayNumOfMonth(day);\n  const dayArray = [];\n\n  for (let i = 1 ; i <= dayNumOfMonth; i++) {\n    dayArray.push(new Date(day.getFullYear(), day.getMonth(), i, 12))\n  }\n\n  let week = [];\n  const weekArray = [];\n  dayArray.forEach((day) => {\n    if (week.length > 0 && day.getDay() === firstDayOfWeek) {\n      weekArray.push(week);\n      week = [];\n    }\n    week.push(day);\n    if (dayArray.indexOf(day) === dayArray.length - 1) {\n      weekArray.push(week);\n    }\n  });\n\n\n  const firstWeek = weekArray[0];\n  const startIndex = 7 - firstWeek.length;\n  for (let i = startIndex; i > 0; i--) {\n    const outsideDate = clone(firstWeek[0]);\n    outsideDate.setDate(firstWeek[0].getDate() - 1);\n    firstWeek.unshift(outsideDate);\n  }\n\n  const lastWeek = weekArray[weekArray.length - 1];\n  for (let i = lastWeek.length; i < 7; i++) {\n    const outsideDate = clone(lastWeek[lastWeek.length - 1]);\n    outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);\n    lastWeek.push(outsideDate);\n  }\n\n  return weekArray;\n}\n\nexport function getFirstDayOfMonth(day) {\n  return new Date(day.getFullYear(), day.getMonth(), 1, 12);\n}\n\nexport function getDayNumOfMonth(day) {\n  const resultDate = getFirstDayOfMonth(day);\n\n  resultDate.setMonth(resultDate.getMonth() + 1);\n  resultDate.setDate(resultDate.getDate() - 1);\n  \n  return resultDate.getDate();\n}\n\nexport function clone(day) {\n  return new Date(day.getTime());\n}\n\nexport default {\n  // formatMonthTitle,\n  formatWeekday,\n  formatWeekdayShort,\n  formatWeekdayLong,\n  getFirstDayOfWeek,\n  getMonths,\n  getWeekArray,\n  addMonths,\n  isSameDay,\n  isDayInRange,\n  getModifiersForDay\n};\n"]}