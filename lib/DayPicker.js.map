{"version":3,"sources":["../src/DayPicker.js"],"names":[],"mappings":"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","file":"DayPicker.js","sourcesContent":["/**\n* @file React日期选择组件入口文件\n* @author xijiawei@baidu.com\n*/\n\nimport React, { Component, PropTypes } from 'react';\n\nimport Navbar from './Navbar';\nimport Month from './Month';\nimport Day from './Day';\nimport { addMonths } from './Utils.js';\nimport Caption from './Caption';\n\n\n/**\n * DayPicker组件类\n *\n * @class\n * @extends Component\n */\nexport default class DayPicker extends Component {\n\n    static propTypes = {\n        // 初始的月份Date对象\n        initialMonth: PropTypes.instanceOf(Date),\n        // 允许切换月份范围起始月份Date对象\n        fromMonth: PropTypes.instanceOf(Date),\n        // 允许切换月份范围结束月份Date对象\n        toMonth: PropTypes.instanceOf(Date),\n\n        // 渲染月份数目\n        numberOfMonths: PropTypes.number,\n\n        // 选中日期判断函数\n        selectedDays: PropTypes.func,\n        // 禁止操作日期判断函数\n        disabledDays: PropTypes.func,\n        // 点击非禁止操作日期的回调函数\n        onDayClick: PropTypes.func,\n        // 自定义判断函数\n        modifiers: PropTypes.object,\n\n        // 可设置的className\n        className: PropTypes.string,\n\n        // 设置是否可以切换月份\n        canChangeMonth: PropTypes.bool,\n        // 设置是否补全日期\n        fixedWeeks: PropTypes.bool,\n\n        // 头部标题的element\n        captionElement: PropTypes.element    \n    };\n\n    static defaultProps = {\n        initialMonth: new Date(),\n        numberOfMonths: 1,\n        className: 'DayPicker',\n        captionElement: <Caption />,\n        canChangeMonth: true,\n        fixedWeeks: false,\n        modifiers: {}\n    };\n\n    constructor(...args) {\n        super(...args);\n\n        this.showNextMonth = this.showNextMonth.bind(this);\n        this.showPreviousMonth = this.showPreviousMonth.bind(this);\n        // 设置当前月份为传入的初始月份\n        this.state = {\n            currentMonth: this.props.initialMonth\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.initialMonth !== nextProps.initialMonth) {\n            this.setState({\n                currentMonth: nextProps.initialMonth\n            });\n        }\n    }\n\n    /**\n     * 切换到指定月份\n     *\n     * @param {Date} day 要切换的月份的Date对象\n     * @param {Function} callback\n     */\n    showMonth(day, callback) {\n        if (!this.allowMonth(day)) {\n            return;\n        }\n        this.setState({ currentMonth: day }, () => {\n            if (callback) {\n                callback();\n            }\n            if (this.props.onMonthChange) {\n                this.props.onMonthChange(this.state.currentMonth);\n            }\n        })\n    }\n\n\n    /**\n     * 判断该月份是否可以切换\n     *\n     * @param {Date} day 要切换的月份的Date对象\n     * @param {Function} callback\n     * @return {Boolean} \n     */\n    allowMonth(day) {\n        const { fromMonth, toMonth, canChangeMonth } = this.props;\n\n        if (!canChangeMonth ||\n            (fromMonth && fromMonth > day) ||\n            (toMonth && toMonth < day) \n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * 判断是否可以切换到下个月\n     *\n     * @return {Boolean} \n     */\n    allowNextMonth() {\n        const { numberOfMonths } = this.props;\n        const { currentMonth } = this.state;\n        const previousMonth = addMonths(currentMonth, numberOfMonths);\n        return this.allowMonth(previousMonth);\n    }\n\n    /**\n     * 判断是否可以切换到上个月\n     *\n     * @return {Boolean} \n     */\n    allowPreviousMonth() {\n        const { currentMonth } = this.state;\n        const { numberOfMonths } = this.props;\n        const previousMonth = addMonths(currentMonth, -1);\n        return this.allowMonth(previousMonth);\n    }\n\n    /**\n     * 切换月份到下一个月\n     *\n     * @param {Function} callback\n     */\n    showNextMonth(callback) {\n        if (!this.allowNextMonth()) {\n            return;\n        }\n        const nextMonth = addMonths(this.state.currentMonth, 1);\n        this.showMonth(nextMonth, callback);\n    }\n\n    /**\n     * 切换月份到上一个月\n     *\n     * @param {Function} callback \n     */\n    showPreviousMonth(callback) {\n        if (!this.allowPreviousMonth()) {\n            return;\n        }\n        const previousMonth = addMonths(this.state.currentMonth, -1);\n        this.showMonth(previousMonth, callback);\n    }\n\n    /**\n     * 生成切换月份导航栏Element\n     *\n     * @return {Object} \n     */\n    renderNavbar() {\n        const props = {\n            className: 'DayPicker-NavBar',\n            showPreviousButton: this.allowPreviousMonth(),\n            showNextButton: this.allowNextMonth(),\n            onNextClick: this.showNextMonth,\n            onPreviousClick: this.showPreviousMonth\n        };\n        return (<Navbar {...props}></Navbar>);\n    }\n\n    /**\n     * 生成月份Elements数组\n     *\n     * @return {Array} \n     */\n    renderMonths() {\n        let { \n            captionElement, \n            selectedDays, \n            disabledDays, \n            fixedWeeks,\n            onDayClick,\n            modifiers,\n        } = this.props;\n\n        let months = [];\n\n        for (let i = 0; i < this.props.numberOfMonths; i++) {\n            const month = addMonths(this.state.currentMonth, i);\n            months.push(\n                <Month key = {i}\n                    month = {month}\n                    modifiers = {modifiers}\n                    captionElement = {captionElement}\n                    selectedDays = {selectedDays}\n                    disabledDays = {disabledDays}\n                    fixedWeeks = {fixedWeeks}\n                    onDayClick = { onDayClick || undefined }\n                ></Month>\n            )\n        }\n\n        return months;\n    }\n\n    render() {\n        let {className} = this.props;\n        return (\n            <div className={className}>\n                {this.renderNavbar()}\n                {this.renderMonths()}\n            </div>\n        );\n    }\n}"]}